
stages:
  - test
  - build_docker
  - posttest
  - release

# global variables
# variables:

  
################################################ build and test ################################################
tests:
  stage: test
  image: golang:1.15.6
  script:
    - go test -v -timeout 60s -parallel 1 -coverprofile=coverage.out  ./...
  artifacts:
    paths:
      - coverage.out


build docker image:
  stage: build_docker
  image: linuxserver/docker-compose:latest
  script:
    - mkdir -p ~/.docker
    - cat ${DOCKER_AUTH_CONFIG} > ~/.docker/config.json
    - |
      export VERSION=${CI_COMMIT_SHORT_SHA}
      docker-compose -f deployments/docker-compose/docker-compose.yml build --pull
      docker-compose -f deployments/docker-compose/docker-compose.yml push

badges:
  stage: posttest
  image: stackshadow/anybadge:latest
  script:
    - make -f ./build/local/Makefile badges
  artifacts:
    paths:
      - gocyclo.svg
      - lastbuild.svg

release (manual):
  stage: release
  image: linuxserver/docker-compose:latest
  script:
    - mkdir -p ~/.docker
    - cat ${DOCKER_AUTH_CONFIG} > ~/.docker/config.json
    
    - |
      export VERSION=${CI_COMMIT_SHORT_SHA}
      docker-compose -f deployments/docker-compose/docker-compose.yml pull
      source .env
      docker tag stackshadow/mgtt:${CI_COMMIT_SHORT_SHA} stackshadow/mgtt:${VERSION}
      docker push stackshadow/mgtt:${VERSION}

    - |
      export VERSION=${CI_COMMIT_SHORT_SHA}
      docker-compose -f deployments/docker-compose/docker-compose.yml pull
      docker tag stackshadow/mgtt:${CI_COMMIT_SHORT_SHA} stackshadow/mgtt:latest
      docker push stackshadow/mgtt:latest
  when: manual