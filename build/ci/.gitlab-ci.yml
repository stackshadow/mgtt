stages:
  - test
  - build_docker
  - posttest
  - release

# global variables
# variables:

################################################ build and test ################################################
tests:
  stage: test
  image: golang:1.16.0
  script:
    - go test -v -timeout 60s -parallel 1 -coverprofile=coverage.out  ./...
  artifacts:
    paths:
      - coverage.out

build docker image:
  stage: build_docker
  image: linuxserver/docker-compose:latest
  script:
    - mkdir -p ~/.docker
    - cat ${DOCKER_AUTH_CONFIG} > ~/.docker/config.json
    - |
      eval $(cat ./.env | awk -F= '{ print "export " $1 }')
      export DOCKERTAG=${CI_COMMIT_SHORT_SHA}
      docker-compose -f deployments/docker-compose/docker-compose.yml build --pull mgtt
      docker-compose -f deployments/docker-compose/docker-compose.yml push mgtt

badges:
  stage: posttest
  image: stackshadow/anybadge:latest
  script:
    - make -f ./build/local/badges.mk badges
  artifacts:
    paths:
      - coverage.svg
      - gocyclo.svg
      - lastbuild.svg
      - gosec.svg
      - gosec.txt

release (manual):
  stage: release
  image: linuxserver/docker-compose:latest
  script:
    - mkdir -p ~/.docker
    - cat ${DOCKER_AUTH_CONFIG} > ~/.docker/config.json

    - |
      eval $(cat ./.env | awk -F= '{ print "export " $1 }')
      export DOCKERTAG=${CI_COMMIT_SHORT_SHA}
      docker-compose -f deployments/docker-compose/docker-compose.yml pull mgtt
      docker tag stackshadow/mgtt:${DOCKERTAG} stackshadow/mgtt:latest
      docker push stackshadow/mgtt:${DOCKERTAG}
      docker push stackshadow/mgtt:latest
  rules:
    - if: $CI_COMMIT_TAG
