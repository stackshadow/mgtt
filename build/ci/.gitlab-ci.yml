stages:
  - test
  - binary
  - build_docker
  - release

# global variables
# variables:

################################################ build and test ################################################
tests:
  stage: test
  image: nixos/nix:latest
  dependencies: []
  needs: []
  script:
    - nix-shell build/nix/badge.nix --command coverage
    - nix-shell build/nix/badge.nix --command cyclo
    - nix-shell build/nix/badge.nix --command sec
  artifacts:
    paths:
      - ./*.svg


build mgtt:
  stage: binary
  image: nixos/nix:latest
  dependencies: []
  needs: 
    - tests
  script:
    - nix-build -A package

build docker image:
  stage: build_docker
  image: nixos/nix:latest
  dependencies: []
  needs: 
    - build mgtt
  script:
    - |
      nix-channel --update
      nix-env -iA nixpkgs.docker
    - |
      $(nix-build -A docker) | docker load
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      docker tag mgtt:dev registry.gitlab.com/stackshadow/mgtt:latest
      docker push registry.gitlab.com/stackshadow/mgtt:latest

# cyclo:
#   stage: badges
#   image: nixos/nix:latest
#   dependencies: []
#   needs: 
#     - build mgtt
#   script:
#     - nix-shell -A badges --command cyclo
#   artifacts:
#     paths:
#       - ./*.svg

# release (manual):
#   stage: release
#   image: linuxserver/docker-compose:latest
#   script:
#     - mkdir -p ~/.docker
#     - cat ${DOCKER_AUTH_CONFIG} > ~/.docker/config.json

#     - |
#       eval $(cat ./.env | awk -F= '{ print "export " $1 }')
#       export DOCKERTAG=${CI_COMMIT_SHORT_SHA}
#       docker-compose -f deployments/docker-compose/docker-compose.yml pull mgtt
#       docker tag stackshadow/mgtt:${DOCKERTAG} stackshadow/mgtt:latest
#       docker push stackshadow/mgtt:${DOCKERTAG}
#       docker push stackshadow/mgtt:latest
#   rules:
#     - if: $CI_COMMIT_TAG
